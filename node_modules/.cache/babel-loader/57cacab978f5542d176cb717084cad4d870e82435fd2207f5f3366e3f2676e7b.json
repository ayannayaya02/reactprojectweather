{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Starg\\\\profile\\\\reactprojectweather\\\\src\\\\weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./weather.css\";\nimport WeatherInfo from \"./weatherInfo\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n  const [city, setCity] = useState(props.defaultCity);\n  const [temperature, setTemperature] = useState({\n    ready: false\n  });\n  const [ready, setReady] = useState(null);\n  const [weatherData, setWeatherData] = useState({});\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      temperature: response.data.main.temp,\n      iconUrl: \"\thttps://openweathermap.org/img/wn/02d@2x.png\",\n      wind: response.data.speed,\n      city: response.data.name\n    });\n    setTemperature(Math.round(response.data.main.temp));\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    //search city\n  }\n\n  function handleCityChange(event) {\n    event.preventDefault();\n  }\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Search\",\n              autoFocus: \"on\",\n              placeholder: \"Search City...\",\n              className: \"form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else {\n    const apiKey = \"e2e5f0664e14425e87abaae94f48d5e8\";\n    let city = \"Paris\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n_s(Weather, \"1CeMicBVyUlzbNiIFe1f+xE39ZM=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","WeatherInfo","axios","jsxDEV","_jsxDEV","Weather","props","_s","city","setCity","defaultCity","temperature","setTemperature","ready","setReady","weatherData","setWeatherData","handleResponse","response","console","log","data","date","Date","dt","description","weather","humidity","main","temp","iconUrl","wind","speed","name","Math","round","handleSubmit","event","preventDefault","handleCityChange","className","children","onSubmit","type","autoFocus","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","apiKey","apiUrl","get","then","_c","$RefreshReg$"],"sources":["C:/Users/Starg/profile/reactprojectweather/src/weather.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./weather.css\";\r\nimport WeatherInfo from \"./weatherInfo\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Weather(props) {\r\n  const[city,setCity]=useState(props.defaultCity);\r\n    const [temperature, setTemperature] = useState({ ready: false });\r\n  const [ready, setReady] = useState(null);\r\n  const [weatherData, setWeatherData] = useState({});\r\n\r\n  function handleResponse(response) {\r\n    console.log(response.data);\r\n    setWeatherData({\r\n      ready: true,\r\n      date: new Date(response.data.dt * 1000),\r\n      description: response.data.weather[0].description,\r\n      humidity: response.data.main.humidity,\r\n      temperature: response.data.main.temp,\r\n      iconUrl: \"\thttps://openweathermap.org/img/wn/02d@2x.png\",\r\n      wind: response.data.speed,\r\n      city: response.data.name,\r\n    });\r\n\r\n    setTemperature(Math.round(response.data.main.temp));\r\n  }\r\n\r\n  function handleSubmit(event){\r\n    event.preventDefault();\r\n    //search city\r\n  }\r\n\r\n  function handleCityChange(event){\r\n    event.preventDefault();\r\n\r\n  }\r\n\r\n  if (weatherData.ready) {\r\n    return (\r\n      <div className=\"weather\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-9\">\r\n              <input\r\n                type=\"Search\"\r\n                autoFocus=\"on\"\r\n                placeholder=\"Search City...\"\r\n                className=\"form\"\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Search\"\r\n                className=\"btn btn-primary w-100\"\r\n             onChange={handleCityChange} />\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <WeatherInfo  data={weatherData}/>\r\n</div>\r\n    );\r\n  }\r\n\r\n        \r\n   else {\r\n    const apiKey = \"e2e5f0664e14425e87abaae94f48d5e8\";\r\n    let city = \"Paris\";\r\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(handleResponse);\r\n    return \"Loading...\";\r\n  }\r\n}\r\n\r\n\r\n \r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}